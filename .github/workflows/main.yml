name: build

on: [push, pull_request]

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, pypy3]
        django-version: [">=2.2,<2.3", ">=3.0,<3.1", ">=3.1,<3.2"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          echo "Python ${{ matrix.python-version }} -> Django ${{ matrix.django-version }}"
          python -m pip install "Django${{ matrix.django-version }}"
          python -m pip install -q -e .
          python -m pip install pytest pytest-cov pytest-django
          echo "Django: `django-admin --version`"
          python --version
      - name: Run tests
        run: pytest --cov elevate --cov-report term-missing --cov-fail-under 100


  docs:
    name: Docs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -q -e .
          python -m pip install sphinx sphinx_rtd_theme
      - name: Build docs
        run: cd docs && sphinx-build -W -b html -d _build/doctrees . _build/html


  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8
      - name: Run linters
        run: flake8 elevate tests conftest.py setup.py tasks.py


  deploy:
    name: Deploy
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: ${{ github.ref=='refs/heads/master' && github.event_name!='pull_request' }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Check release
        id: check_release
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry githubrelease autopub
          echo "##[set-output name=release;]$(autopub check)"
      - name: Publish
        if: ${{ steps.check_release.outputs.release=='' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          git remote set-url origin https://$GITHUB_TOKEN@github.com/${{ github.repository }}
          autopub prepare
          poetry build
          autopub commit
          autopub githubrelease
          poetry publish -u __token__ -p $PYPI_PASSWORD
